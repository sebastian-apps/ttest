"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(typeof self !== 'undefined' ? self : this)["webpackHotUpdatevueapp"]("app",{

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/App.vue?vue&type=script&lang=js&":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/App.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chart.js */ \"./node_modules/chart.js/dist/Chart.js\");\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(chart_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var chartjs_plugin_annotation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! chartjs-plugin-annotation */ \"./node_modules/chartjs-plugin-annotation/src/index.js\");\n/* harmony import */ var chartjs_plugin_annotation__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(chartjs_plugin_annotation__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ttest_chart_data_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ttest-chart-data.js */ \"./src/ttest-chart-data.js\");\n/* harmony import */ var _welchs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/welchs */ \"./src/welchs.js\");\n/* harmony import */ var _components_HypothesisComponent_vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/HypothesisComponent.vue */ \"./src/components/HypothesisComponent.vue\");\n/* harmony import */ var _components_PPVComponent_vue__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/PPVComponent.vue */ \"./src/components/PPVComponent.vue\");\n/* harmony import */ var _components_ROCComponent_vue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/ROCComponent.vue */ \"./src/components/ROCComponent.vue\");\n/* harmony import */ var _store_store__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./store/store */ \"./src/store/store.js\");\n// import slider from 'jquery-ui-slider';\n// import $ from \"jquery\";\n\n // npm install chart.js@2.9.4, then tried 2.9.3. so,e say 2.9.4 doesn't work.\n // npm install chartjs-plugin-annotation@0.5.7 --save    <<< used this. necessary?\n// import * as math from 'mathjs';\n\n\n\n\n\n\n\n// store.commit('increment');\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  store: _store_store__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n  name: 'App',\n  components: {\n    HypothesisComponent: _components_HypothesisComponent_vue__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    PPVComponent: _components_PPVComponent_vue__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    ROCComponent: _components_ROCComponent_vue__WEBPACK_IMPORTED_MODULE_6__[\"default\"]\n  },\n  data() {\n    return {\n      store: _store_store__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n      ttestChartData: _ttest_chart_data_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n      storecount: _store_store__WEBPACK_IMPORTED_MODULE_7__[\"default\"].state.count,\n      ttestChart: null,\n      thumb: null,\n      sliderValue: null,\n      sliderElem: null\n    };\n  },\n  methods: {\n    myFunction: function () {\n      if (this.store.state.crit_t_value > this.store.state.t_value) {\n        this.store.state.crit_t_value = -3.2155;\n        console.log(\"SMALLER\");\n      } else {\n        this.store.state.crit_t_value = 3.2155;\n        console.log(\"BIGGER\");\n      }\n      _store_store__WEBPACK_IMPORTED_MODULE_7__[\"default\"].commit('decrement');\n      _store_store__WEBPACK_IMPORTED_MODULE_7__[\"default\"].commit('updateState');\n      this.storecount++;\n      document.getElementById(\"demo\").innerHTML = \"I have changed!\";\n    },\n    drawAlphaCurve: function (group1, crit_t_value) {\n      let alpha_curve = _welchs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getAlphaCurve(group1, crit_t_value);\n      this.ttestChartData.data.datasets[3].data = alpha_curve; // was [3]['data']\n      this.ttestChart.update();\n    },\n    drawBetaCurve: function (group2, crit_t_value, ncp) {\n      let beta_curve = _welchs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].drawBetaCurve(group2, crit_t_value, ncp);\n      this.ttestChartData.data.datasets[4].data = beta_curve;\n      this.ttestChart.update();\n    },\n    convertChartXToScreenX: function (x, chart_x_min, chart_x_max, x1, x2, offset) {\n      //return math.round((((x - chart_x_min)/(chart_x_max - chart_x_min))*(x2-x1)) - offset,0);\n      return (x - chart_x_min) / (chart_x_max - chart_x_min) * (x2 - x1) - offset;\n    },\n    convertScreenXToChartX: function (x, x1, x2, chart_x1, chart_x2, thumbOffsetWidth) {\n      return (x + thumbOffsetWidth / 2) / (x2 - x1) * (chart_x2 - chart_x1) + chart_x1;\n    },\n    slidefunc() {\n      console.log(\"SLIDEFUNC\", this.store.state.axes.x_min, this.store.state.axes.x_max);\n      console.log(Number(this.slideValue));\n      let new_crit_t = this.convertScreenXToChartX(Number(this.slideValue), 0, 100, this.store.state.axes.x_min, this.store.state.axes.x_max, 0);\n      console.log(\"CONVERT:\", new_crit_t);\n      this.ttestChartData.options.annotation.annotations[1].value = new_crit_t;\n      this.ttestChart.update();\n      this.adjSliderSizePoosition();\n    },\n    adjSliderSizePoosition() {\n      var points = this.ttestChart.chart.getDatasetMeta(0).data;\n      var x1 = points[0]._model.x;\n      var x2 = points[1]._model.x;\n      this.sliderElem.style.left = x1 + \"px\";\n      this.sliderElem.style.width = x2 - x1 + \"px\";\n    }\n  },\n  // convertScreenXToChartX: function (x, x1, x2, chart_x1, chart_x2, thumbOffsetWidth){\n  //   return (x + (thumbOffsetWidth/2))/(x2 - x1)*(chart_x2-chart_x1) + chart_x1;\n  // },\n\n  // initThumb: function (chart_x_min, chart_x_max, thumbOffsetWidth, crit_t_init){\n  //   // Initial position of the slider thumb.\n  //   console.log(\"crit_t_init:\", crit_t_init);\n  //   var points = this.ttestChart.chart.getDatasetMeta(0).data;\n  //   var x1 = points[0]._model.x;\n  //   var x2 = points[1]._model.x;\n\n  //   // convert chart x value to the x screen position for the slider thumb\n  //   // var offset = thumb.offsetWidth/2; //.59;  // previously: offset=3\n  //   var offset = thumbOffsetWidth/2; //.59;  // previously: offset=3\n  //   var new_thumb = this.convertChartXToScreenX(crit_t_init, chart_x_min, chart_x_max, x1, x2, offset);\n  //   // elem(\"thumb\").style.left = new_thumb + \"px\";\n\n  //   // BELOW IS NEW\n  //   // adjust the slider\n  //   // elem(\"slider\").style.left = x1 + \"px\";\n  //   // elem(\"slider\").style.width = x2 - x1 + \"px\";\n\n  //   // updateState(crit_t_init, df, ncp);\n  //   return new_thumb;\n  // },\n\n  // moveBar: function(){\n\n  //   // get absolute x,y coordinates of the chart on the screen\n  //   let points = this.ttestChart.chart.getDatasetMeta(0).data;\n  //   let x1 = points[0]._model.x;\n  //   let y1 = points[0]._model.y;\n  //   let x2 = points[1]._model.x;\n  //   let y2 = points[1]._model.y;\n\n  //   // adjust the slider\n  //   elem(\"slider\").style.left = x1 + \"px\";\n  //   elem(\"slider\").style.width = x2 - x1 + \"px\";\n\n  //   // draw the critical t vertical line\n  //   crit_t_value = round(convertScreenXToChartX(sliderPositionLeft, x1, x2, axes.x_min, axes.x_max, thumb.offsetWidth));\n  //   updateState(crit_t_value, df, ncp);\n\n  // },\n  mounted() {\n    // let volume = document.querySelector(\"#thumb\");\n    // volume.addEventListener(\"change\", function(e) {\n    // console.log(\"e:\", e.currentTarget.value / 100);\n    // });\n\n    // this.thumb = slider.querySelector('.thumb');\n    // // var sliderPositionLeft = initThumb(axes.x_min, axes.x_max, thumb.offsetWidth, crit_t_init);\n    // var sliderPositionLeft = this.initThumb(-4.753, 7.232, this.thumb.offsetWidth, this.store.state.crit_t_value);\n    // console.log(sliderPositionLeft);\n\n    chart_js__WEBPACK_IMPORTED_MODULE_0___default().plugins.register((chartjs_plugin_annotation__WEBPACK_IMPORTED_MODULE_1___default()));\n    this.ttestChart = new (chart_js__WEBPACK_IMPORTED_MODULE_0___default())(document.getElementById('ttest-chart'), this.ttestChartData);\n    this.ttestChartData.data.datasets[0].data = [{\n      x: -4.753,\n      y: 0\n    }, {\n      x: 7.232,\n      y: 0\n    }];\n    this.ttestChartData.options.scales.xAxes[0].ticks.min = this.store.state.axes.min;\n    this.ttestChartData.options.scales.xAxes[0].ticks.max = this.store.state.axes.max;\n    this.ttestChartData.options.scales.yAxes[0].ticks.max = 0.5;\n    this.ttestChartData.options.annotation.annotations[0].label.content = 'p = ' + this.store.state.p_value;\n    this.ttestChartData.options.annotation.annotations[0].value = this.store.state.t_value;\n    this.ttestChartData.options.annotation.annotations[1].content = '\\u03B1' + this.store.state.alpha;\n    this.ttestChartData.options.annotation.annotations[1].value = this.store.state.crit_t_value;\n    this.ttestChartData.data.datasets[1].data = this.store.state.group1.dist;\n    this.ttestChartData.data.datasets[2].data = this.store.state.group2.dist;\n    this.ttestChart.update();\n    this.drawAlphaCurve(this.store.state.group1, this.store.state.crit_t_value);\n    this.drawBetaCurve(this.store.state.group2, this.store.state.crit_t_value, this.store.state.ncp);\n    this.sliderElem = document.getElementById('myRange');\n    // var slider = document.getElementById(\"myRange\");\n    // Update the current slider value (each time you drag the slider handle)\n    // slider.oninput = function() {\n    //   console.log(this.value);\n    // console.log(\"axes:\", this.store.state.axes);\n    // this.store.state.crit_t_value = this.value;\n    // this.ttestChartData.options.annotation.annotations[1].value = this.store.state.crit_t_value;\n    // crit_t_value = round(this.convertScreenXToChartX(sliderPositionLeft, x1, x2, axes.x_min, axes.x_max, thumb.offsetWidth));\n    // console.log(\"CONVERT:\", this.convertScreenXToChartX(50, 0, 100, this.store.state.axes.x_min, this.store.state.axes.x_max, 0));\n    // this.ttestChartData.options.annotation.annotations[1].value = this.value;\n    // this.ttestChart.update();\n    // }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/App.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/App.vue?vue&type=template&id=7ba5bd90&":
/*!********************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/App.vue?vue&type=template&id=7ba5bd90& ***!
  \********************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"render\": function() { return /* binding */ render; },\n/* harmony export */   \"staticRenderFns\": function() { return /* binding */ staticRenderFns; }\n/* harmony export */ });\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    attrs: {\n      id: \"app\"\n    }\n  }, [_vm._m(0), _vm._m(1), _c(\"div\", {\n    staticClass: \"container\",\n    attrs: {\n      id: \"ContainerWindow\"\n    }\n  }, [_vm._m(2), _vm._m(3), _vm._m(4), _c(\"p\"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"col-md-6\"\n  }, [_c(\"div\", {\n    staticClass: \"slidecontainer\",\n    attrs: {\n      id: \"slidecontainer\"\n    }\n  }, [_c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.slideValue,\n      expression: \"slideValue\"\n    }],\n    staticClass: \"slider\",\n    style: {\n      left: _vm.computedLeft\n    },\n    attrs: {\n      type: \"range\",\n      min: \"0\",\n      max: \"100\",\n      value: \"50\",\n      id: \"myRange\"\n    },\n    domProps: {\n      value: _vm.slideValue\n    },\n    on: {\n      input: _vm.slidefunc,\n      __r: function ($event) {\n        _vm.slideValue = $event.target.value;\n      }\n    }\n  })]), _vm._m(5), _vm._m(6), _vm._m(7), _c(\"div\", {\n    staticClass: \"enter-data\"\n  }, [_c(\"form\", {\n    staticClass: \"form\",\n    attrs: {\n      id: \"data-form\",\n      action: \"{% url 'core:ttest' %}\",\n      method: \"post\"\n    }\n  }, [_c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"col-xs-6 col-sm-4\"\n  }), _c(\"div\", {\n    staticClass: \"col-xs-6 col-sm-4\"\n  }), _c(\"div\", {\n    staticClass: \"col-xs-12 col-sm-4\"\n  }, [_c(\"b\", [_vm._v(\"STATISTICS\")]), _c(\"br\"), _c(\"br\"), _c(\"b\", [_vm._v(\"critical t:\")]), _vm._v(\" \"), _c(\"span\", {\n    attrs: {\n      id: \"crit_t_value\"\n    }\n  }, [_vm._v(_vm._s(this.store.state.crit_t_value))]), _c(\"br\"), _c(\"b\", [_vm._v(\"sig level (α):\")]), _vm._v(\" \"), _c(\"span\", {\n    attrs: {\n      id: \"sig-level\"\n    }\n  }, [_vm._v(_vm._s(this.store.state.alpha))]), _c(\"br\"), _c(\"br\"), _c(\"b\", [_vm._v(\"t-value:\")]), _vm._v(\" \"), _c(\"span\", {\n    attrs: {\n      id: \"t_value\"\n    }\n  }, [_vm._v(_vm._s(this.store.state.t_value))]), _c(\"br\"), _c(\"b\", [_vm._v(\"p-value:\")]), _vm._v(\" \" + _vm._s(this.store.state.p_value)), _c(\"br\"), _c(\"br\"), _c(\"b\", [_vm._v(\"ncp:\")]), _vm._v(\" \"), _c(\"span\", {\n    attrs: {\n      id: \"ncp\"\n    }\n  }, [_vm._v(_vm._s(this.store.state.ncp))]), _c(\"br\"), _c(\"br\"), _c(\"br\"), _c(\"button\", {\n    staticClass: \"btn btn-primary\",\n    staticStyle: {\n      \"margin-bottom\": \"5px\"\n    },\n    attrs: {\n      name: \"submit\"\n    }\n  }, [_vm._v(\"Analyze\")]), _c(\"button\", {\n    staticClass: \"btn btn-default\",\n    staticStyle: {\n      \"margin-bottom\": \"5px\"\n    },\n    attrs: {\n      type: \"button\",\n      onclick: \"clearForm()\"\n    }\n  }, [_vm._v(\"Clear\")]), _c(\"br\"), _c(\"br\")])])]), _c(\"div\", {\n    staticClass: \"row\",\n    staticStyle: {\n      \"background-color\": \"#e8e8e8\",\n      padding: \"10px\",\n      \"min-width\": \"300px\"\n    }\n  }, [_c(\"div\", {\n    staticClass: \"col-xs-4\"\n  }, [_vm._m(8), _vm._v(\" \" + _vm._s(this.store.state.group1.mean)), _c(\"br\"), _vm._v(\" \" + _vm._s(this.store.state.group1.sd)), _c(\"br\"), _vm._v(\" \" + _vm._s(this.store.state.group1.n)), _c(\"br\")]), _c(\"div\", {\n    staticClass: \"col-xs-4\"\n  }, [_vm._m(9), _vm._v(\" \" + _vm._s(this.store.state.group2.mean)), _c(\"br\"), _vm._v(\" \" + _vm._s(this.store.state.group2.sd)), _c(\"br\"), _vm._v(\" \" + _vm._s(this.store.state.group2.n)), _c(\"br\")]), _vm._m(10)])]), _c(\"p\"), _c(\"br\")]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"col-md-1\"\n  }), _c(\"div\", {\n    staticClass: \"col-md-5\"\n  }, [_c(\"div\", {\n    staticClass: \"tabbed\"\n  }, [_c(\"input\", {\n    attrs: {\n      type: \"radio\",\n      name: \"tabs\",\n      id: \"tab-nav-1\",\n      checked: \"\"\n    }\n  }), _c(\"label\", {\n    attrs: {\n      for: \"tab-nav-1\"\n    }\n  }, [_vm._v(\"Hypothesis Testing\")]), _c(\"input\", {\n    attrs: {\n      type: \"radio\",\n      name: \"tabs\",\n      id: \"tab-nav-2\"\n    }\n  }), _c(\"label\", {\n    attrs: {\n      for: \"tab-nav-2\"\n    }\n  }, [_vm._v(\"PPV\")]), _c(\"input\", {\n    attrs: {\n      type: \"radio\",\n      name: \"tabs\",\n      id: \"tab-nav-3\"\n    }\n  }), _c(\"label\", {\n    attrs: {\n      for: \"tab-nav-3\"\n    }\n  }, [_vm._v(\"ROC\")]), _c(\"div\", {\n    staticClass: \"tabs\"\n  }, [_c(\"div\", {\n    staticClass: \"tab\"\n  }, [_c(\"HypothesisComponent\")], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"tab\"\n  }, [_c(\"PPVComponent\")], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"tab\"\n  }, [_c(\"ROCComponent\")], 1)])])])]), _vm._v(\" \"), _c(\"div\", {\n    staticStyle: {\n      height: \"1200px\"\n    },\n    attrs: {\n      id: \"SmallScreen\"\n    }\n  }), _c(\"br\"), _c(\"br\"), _c(\"br\")]), _vm._m(11), _vm._m(12)]);\n};\nvar staticRenderFns = [function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"hero-image\",\n    attrs: {\n      id: \"OrangeWindow\"\n    }\n  }, [_c(\"div\", {\n    attrs: {\n      id: \"titlename\"\n    }\n  }, [_vm._v(\"Welch's \"), _c(\"i\", [_vm._v(\"t\")]), _vm._v(\"-test\")]), _c(\"div\", {\n    attrs: {\n      id: \"titlename-sub\"\n    }\n  }, [_vm._v(\"calculator\")])]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    attrs: {\n      id: \"BlackWindow\"\n    }\n  }, [_c(\"div\", {\n    staticStyle: {\n      \"text-align\": \"justify\"\n    }\n  }, [_vm._v(\" Is there a statistically significant difference between two datasets?\"), _c(\"p\"), _vm._v(\" Move the slider and observe the impact of the significance level on the probability of making the wrong decision. Input and explore your datasets. This calculator is for one-tailed Welch’s \"), _c(\"i\", [_vm._v(\"t\")]), _vm._v(\"-tests. The data are assumed to be normally distributed. \"), _c(\"a\", {\n    attrs: {\n      href: \"#more-info\"\n    }\n  }, [_vm._v(\"Find more information.\")])]), _c(\"p\")]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"p\", [_c(\"br\")]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"p\", [_c(\"br\")]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"p\", [_c(\"br\")]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", [_c(\"canvas\", {\n    attrs: {\n      id: \"ttest-chart\",\n      width: \"1000\",\n      height: \"800\"\n    }\n  })]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"p\", [_c(\"br\")]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"p\", [_c(\"br\"), _c(\"b\", [_c(\"span\", {\n    attrs: {\n      id: \"message\"\n    }\n  })]), _c(\"br\")]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"span\", {\n    attrs: {\n      id: \"SmallScreen\"\n    }\n  }, [_c(\"b\", [_vm._v(\"Group 1\")]), _c(\"br\")]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"span\", {\n    attrs: {\n      id: \"SmallScreen\"\n    }\n  }, [_c(\"b\", [_vm._v(\"Group 2\")]), _c(\"br\")]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    staticClass: \"col-xs-4\"\n  }, [_c(\"span\", {\n    attrs: {\n      id: \"SmallScreen\"\n    }\n  }, [_c(\"br\")]), _c(\"b\", [_vm._v(\"Mean\")]), _c(\"br\"), _c(\"b\", [_vm._v(\"SD\")]), _c(\"br\"), _c(\"b\", [_vm._v(\"N\")])]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    attrs: {\n      id: \"BlackWindow\"\n    }\n  }, [_c(\"a\", {\n    attrs: {\n      name: \"more-info\"\n    }\n  }), _c(\"div\", {\n    staticClass: \"more-info\"\n  }, [_c(\"h4\", [_vm._v(\"More information\")]), _vm._v(\" The Welch's \"), _c(\"i\", [_vm._v(\"t\")]), _vm._v(\"-test, or unequal variances \"), _c(\"i\", [_vm._v(\"t\")]), _vm._v(\"-test, can test hypotheses such as whether the means of two independent normally-distributed populations are equal. While the commonly-used Student \"), _c(\"i\", [_vm._v(\"t\")]), _vm._v(\"-test requires that the two samples share equal variances and equal sample sizes, the Welch’s \"), _c(\"i\", [_vm._v(\"t\")]), _vm._v(\"-test does not have this requirement. Researchers argue that the Welch’s \"), _c(\"i\", [_vm._v(\"t\")]), _vm._v(\"-test is more versatile and should instead be used by default.\"), _c(\"sup\", [_vm._v(\"1,2\")]), _c(\"br\"), _c(\"br\"), _vm._v(\" Statistical rigor can be achieved with \"), _c(\"i\", [_vm._v(\"t\")]), _vm._v(\"-tests, yet the significance level is set arbitrarily. While lowering significance levels mitigates false positives (α), the probability of false negatives (β) increases, and tests may fail to detect existing effects.\"), _c(\"sup\", [_vm._v(\"3\")])]), _c(\"br\")]);\n}, function () {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", {\n    attrs: {\n      id: \"WhiteWindow\"\n    }\n  }, [_c(\"h4\", [_vm._v(\"References\")]), _vm._v(\" 1. Dahiru, T. P-value, a true test of statistical significance? A cautionary note. \"), _c(\"i\", [_vm._v(\"Annals of Ibadan Postgraduate Medicine.\")]), _vm._v(\" 2008, \"), _c(\"i\", [_vm._v(\"6\")]), _vm._v(\"(1): 21–26. \"), _c(\"br\"), _vm._v(\" 2. Delacre, M.; Lakens, D.; Leys, C. Why Psychologists Should by Default Use Welch’s t-test Instead of Student’s t-test. \"), _c(\"i\", [_vm._v(\"International Review of Social Psychology.\")]), _vm._v(\" 2017, \"), _c(\"i\", [_vm._v(\"30\")]), _vm._v(\"(1), 92–101. \"), _c(\"br\"), _vm._v(\" 3. Benjamin, D.J.; Berger, J.O.; Johannesson, M. et al. Redefine statistical significance. \"), _c(\"i\", [_vm._v(\"Nature Human Behaviour.\")]), _vm._v(\" 2018, \"), _c(\"i\", [_vm._v(\"2\")]), _vm._v(\", 6–10. \"), _c(\"br\"), _vm._v(\" 4. Colquhoun, D. An investigation of the false discovery rate and the misinterpretation of p-values. \"), _c(\"i\", [_vm._v(\"Royal Society Open Science.\")]), _vm._v(\" 2014, \"), _c(\"i\", [_vm._v(\"1\")]), _vm._v(\"(3): 140216. \")]);\n}];\nrender._withStripped = true;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[0]!./node_modules/@vue/vue-loader-v15/lib/loaders/templateLoader.js??ruleSet[1].rules[3]!./node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./src/App.vue?vue&type=template&id=7ba5bd90&\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ !function() {
/******/ 	__webpack_require__.h = function() { return "9f9ed9e9b9d61f08"; }
/******/ }();
/******/ 
/******/ }
);